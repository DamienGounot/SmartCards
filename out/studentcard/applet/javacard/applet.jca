// converted by version 1.3
<<<<<<< HEAD
// on Sat Nov 21 16:31:08 CET 2020
=======
// on Sat Nov 21 16:48:10 CET 2020
>>>>>>> main

.package applet {
	.aid 0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6;
	.version 1.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.0;		//javacard/framework
	}

	.applet {
		0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6:0x1 TheApplet;
	}

	.constantPool {
		// 0
		instanceFieldRef 0.9 TheApplet/pinRead;
		// 1
		instanceFieldRef 0.9 TheApplet/pinWrite;
		// 2
		instanceFieldRef boolean TheApplet/PINsecurity;
		// 3
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 4
		virtualMethodRef 0.9.8([BSB)V;		// javacard/framework/OwnerPIN.update([BSB)V
		// 5
		classRef 0.9;		// javacard/framework/OwnerPIN
		// 6
		staticMethodRef 0.9.0(BB)V;		// javacard/framework/OwnerPIN.<init>(BB)V
		// 7
		virtualMethodRef 0.3.1()V;		// javacard/framework/Applet.register()V
		// 8
		classRef TheApplet;
		// 9
		staticMethodRef TheApplet/<init>()V;
		// 10
		virtualMethodRef 0.9.2()B;		// javacard/framework/OwnerPIN.getTriesRemaining()B
		// 11
		virtualMethodRef 0.9.5()V;		// javacard/framework/OwnerPIN.reset()V
		// 12
		virtualMethodRef 0.3.3()Z;		// javacard/framework/Applet.selectingApplet()Z
		// 13
		virtualMethodRef 0.10.1()[B;		// javacard/framework/APDU.getBuffer()[B
		// 14
		virtualMethodRef TheApplet/updateCardKey(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 15
		virtualMethodRef TheApplet/uncipherFileByCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 16
		virtualMethodRef TheApplet/cipherFileByCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 17
		virtualMethodRef TheApplet/cipherAndUncipherNameByCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 18
		virtualMethodRef TheApplet/readFileFromCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 19
		virtualMethodRef TheApplet/writeFileToCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 20
		virtualMethodRef TheApplet/updateWritePIN(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 21
		virtualMethodRef TheApplet/updateReadPIN(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 22
		virtualMethodRef TheApplet/displayPINSecurity(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 23
		virtualMethodRef TheApplet/desactivateActivatePINSecurity(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 24
		virtualMethodRef TheApplet/enterReadPIN(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 25
		virtualMethodRef TheApplet/enterWritePIN(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 26
		virtualMethodRef TheApplet/readNameFromCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 27
		virtualMethodRef 0.9.4()Z;		// javacard/framework/OwnerPIN.isValidated()Z
		// 28
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 29
		virtualMethodRef TheApplet/writeNameToCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 30
		virtualMethodRef 0.10.8(SS)V;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
		// 31
		virtualMethodRef 0.10.6()S;		// javacard/framework/APDU.setIncomingAndReceive()S
		// 32
		virtualMethodRef 0.9.1([BSB)Z;		// javacard/framework/OwnerPIN.check([BSB)Z
		// 33
		staticFieldRef byte[] TheApplet/studentName;
		// 34
		staticMethodRef 0.16.1([BS[BSS)S;		// javacard/framework/Util.arrayCopy([BS[BSS)S
	}

	.class public TheApplet 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			 0.9 pinRead 0;		// Ljavacard/framework/OwnerPIN;
			 0.9 pinWrite 1;		// Ljavacard/framework/OwnerPIN;
			 boolean PINsecurity 2;		// Z
			static final byte UPDATECARDKEY = 20;		// B
			static final byte UNCIPHERFILEBYCARD = 19;		// B
			static final byte CIPHERFILEBYCARD = 18;		// B
			static final byte CIPHERANDUNCIPHERNAMEBYCARD = 17;		// B
			static final byte READFILEFROMCARD = 16;		// B
			static final byte WRITEFILETOCARD = 9;		// B
			static final byte UPDATEWRITEPIN = 8;		// B
			static final byte UPDATEREADPIN = 7;		// B
			static final byte DISPLAYPINSECURITY = 6;		// B
			static final byte DESACTIVATEACTIVATEPINSECURITY = 5;		// B
			static final byte ENTERREADPIN = 4;		// B
			static final byte ENTERWRITEPIN = 3;		// B
			static final byte READNAMEFROMCARD = 2;		// B
			static final byte WRITENAMETOCARD = 1;		// B
			static byte[] studentName = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};		// [B
			static final byte BINARY_WRITE = -48;		// B
			static final byte BINARY_READ = -80;		// B
			static final byte SELECT = -92;		// B
			static final byte PIN_VERIFY = 32;		// B
			static final short SW_PIN_VERIFICATION_REQUIRED = 25345;		// S
			static final short SW_VERIFICATION_FAILED = 25344;		// S
			static final short NVRSIZE = 1024;		// S
			static byte[] NVR = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};		// [B
		}

		.publicMethodTable 4 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
		}

		.packageMethodTable 0 {
			updateCardKey(Ljavacard/framework/APDU;)V;
			uncipherFileByCard(Ljavacard/framework/APDU;)V;
			cipherFileByCard(Ljavacard/framework/APDU;)V;
			cipherAndUncipherNameByCard(Ljavacard/framework/APDU;)V;
			readFileFromCard(Ljavacard/framework/APDU;)V;
			writeFileToCard(Ljavacard/framework/APDU;)V;
			updateWritePIN(Ljavacard/framework/APDU;)V;
			updateReadPIN(Ljavacard/framework/APDU;)V;
			displayPINSecurity(Ljavacard/framework/APDU;)V;
			desactivateActivatePINSecurity(Ljavacard/framework/APDU;)V;
			enterReadPIN(Ljavacard/framework/APDU;)V;
			enterWritePIN(Ljavacard/framework/APDU;)V;
			readNameFromCard(Ljavacard/framework/APDU;)V;
			writeNameToCard(Ljavacard/framework/APDU;)V;
		}

		.method protected <init>()V 0 {
			.stack 5;
			.locals 2;

				L0:	aload_0;
					invokespecial 3;		// javacard/framework/Applet.<init>()V
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush 48;
					bastore;
					dup;
					sconst_1;
					bspush 48;
					bastore;
					dup;
					sconst_2;
					bspush 48;
					bastore;
					dup;
					sconst_3;
					bspush 48;
					bastore;
					astore_1;
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush 49;
					bastore;
					dup;
					sconst_1;
					bspush 49;
					bastore;
					dup;
					sconst_2;
					bspush 49;
					bastore;
					dup;
					sconst_3;
					bspush 49;
					bastore;
					astore_2;
					aload_0;
					new 5;		// javacard/framework/OwnerPIN
					dup;
					sconst_3;
					bspush 8;
					invokespecial 6;		// javacard/framework/OwnerPIN.<init>(BB)V
					putfield_a 0;		// reference applet/TheApplet.pinRead
					getfield_a_this 0;		// reference applet/TheApplet.pinRead
					aload_1;
					sconst_0;
					sconst_4;
					invokevirtual 4;		// javacard/framework/OwnerPIN.update([BSB)V
					aload_0;
					new 5;		// javacard/framework/OwnerPIN
					dup;
					sconst_3;
					bspush 8;
					invokespecial 6;		// javacard/framework/OwnerPIN.<init>(BB)V
					putfield_a 1;		// reference applet/TheApplet.pinWrite
					getfield_a_this 1;		// reference applet/TheApplet.pinWrite
					aload_2;
					sconst_0;
					sconst_4;
					invokevirtual 4;		// javacard/framework/OwnerPIN.update([BSB)V
					aload_0;
					sconst_1;
					putfield_b 2;		// boolean applet/TheApplet.PINsecurity
					aload_0;
					invokevirtual 7;		// javacard/framework/Applet.register()V
					return;
		}

		.method public static install([BSB)V 1 {
			.stack 2;
			.locals 0;

				L0:	new 8;		// applet/TheApplet
					dup;
					invokespecial 9;		// applet/TheApplet.<init>()V
					pop;
					return;
		}

		.method public select()Z 6 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 0;		// reference applet/TheApplet.pinRead
					invokevirtual 10;		// javacard/framework/OwnerPIN.getTriesRemaining()B
					ifeq L2;
				L1:	getfield_a_this 1;		// reference applet/TheApplet.pinWrite
					invokevirtual 10;		// javacard/framework/OwnerPIN.getTriesRemaining()B
					ifne L3;
				L2:	sconst_0;
					sreturn;
				L3:	sconst_1;
					sreturn;
		}

		.method public deselect()V 4 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 0;		// reference applet/TheApplet.pinRead
					invokevirtual 11;		// javacard/framework/OwnerPIN.reset()V
					getfield_a_this 1;		// reference applet/TheApplet.pinWrite
					invokevirtual 11;		// javacard/framework/OwnerPIN.reset()V
					return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 2;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_0;
					invokevirtual 12;		// javacard/framework/Applet.selectingApplet()Z
					sconst_1;
					if_scmpne L2;
				L1:	return;
				L2:	aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_2;
					sconst_1;
					baload;
					stableswitch L25 1 20 L20 L15 L14 L13 L12 L11 L10 L9 L8 L25 L25 L25 L25 L25 L25 L7 L6 L5 L4 L3;
				L3:	aload_0;
					aload_1;
					invokevirtual 14;		// applet/TheApplet.updateCardKey(Ljavacard/framework/APDU;)V
					goto_w L26;
				L4:	aload_0;
					aload_1;
					invokevirtual 15;		// applet/TheApplet.uncipherFileByCard(Ljavacard/framework/APDU;)V
					goto_w L26;
				L5:	aload_0;
					aload_1;
					invokevirtual 16;		// applet/TheApplet.cipherFileByCard(Ljavacard/framework/APDU;)V
					goto_w L26;
				L6:	aload_0;
					aload_1;
					invokevirtual 17;		// applet/TheApplet.cipherAndUncipherNameByCard(Ljavacard/framework/APDU;)V
					goto_w L26;
				L7:	aload_0;
					aload_1;
					invokevirtual 18;		// applet/TheApplet.readFileFromCard(Ljavacard/framework/APDU;)V
					goto L26;
				L8:	aload_0;
					aload_1;
					invokevirtual 19;		// applet/TheApplet.writeFileToCard(Ljavacard/framework/APDU;)V
					goto L26;
				L9:	aload_0;
					aload_1;
					invokevirtual 20;		// applet/TheApplet.updateWritePIN(Ljavacard/framework/APDU;)V
					goto L26;
				L10:	aload_0;
					aload_1;
					invokevirtual 21;		// applet/TheApplet.updateReadPIN(Ljavacard/framework/APDU;)V
					goto L26;
				L11:	aload_0;
					aload_1;
					invokevirtual 22;		// applet/TheApplet.displayPINSecurity(Ljavacard/framework/APDU;)V
					goto L26;
				L12:	aload_0;
					aload_1;
					invokevirtual 23;		// applet/TheApplet.desactivateActivatePINSecurity(Ljavacard/framework/APDU;)V
					goto L26;
				L13:	aload_0;
					aload_1;
					invokevirtual 24;		// applet/TheApplet.enterReadPIN(Ljavacard/framework/APDU;)V
					goto L26;
				L14:	aload_0;
					aload_1;
					invokevirtual 25;		// applet/TheApplet.enterWritePIN(Ljavacard/framework/APDU;)V
					goto L26;
				L15:	getfield_b_this 2;		// boolean applet/TheApplet.PINsecurity
					ifne L17;
				L16:	aload_0;
					aload_1;
					invokevirtual 26;		// applet/TheApplet.readNameFromCard(Ljavacard/framework/APDU;)V
					goto L26;
				L17:	getfield_a_this 0;		// reference applet/TheApplet.pinRead
					invokevirtual 27;		// javacard/framework/OwnerPIN.isValidated()Z
					ifne L19;
				L18:	sspush 25345;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L19:	aload_0;
					aload_1;
					invokevirtual 26;		// applet/TheApplet.readNameFromCard(Ljavacard/framework/APDU;)V
					goto L26;
				L20:	getfield_b_this 2;		// boolean applet/TheApplet.PINsecurity
					ifne L22;
				L21:	aload_0;
					aload_1;
					invokevirtual 29;		// applet/TheApplet.writeNameToCard(Ljavacard/framework/APDU;)V
					goto L26;
				L22:	getfield_a_this 1;		// reference applet/TheApplet.pinWrite
					invokevirtual 27;		// javacard/framework/OwnerPIN.isValidated()Z
					ifne L24;
				L23:	sspush 25345;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L24:	aload_0;
					aload_1;
					invokevirtual 29;		// applet/TheApplet.writeNameToCard(Ljavacard/framework/APDU;)V
					goto L26;
				L25:	sspush 27904;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L26:	return;
		}

		.method  updateCardKey(Ljavacard/framework/APDU;)V 128 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  uncipherFileByCard(Ljavacard/framework/APDU;)V 129 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  cipherFileByCard(Ljavacard/framework/APDU;)V 130 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  cipherAndUncipherNameByCard(Ljavacard/framework/APDU;)V 131 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  readFileFromCard(Ljavacard/framework/APDU;)V 132 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  writeFileToCard(Ljavacard/framework/APDU;)V 133 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  updateWritePIN(Ljavacard/framework/APDU;)V 134 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  updateReadPIN(Ljavacard/framework/APDU;)V 135 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  displayPINSecurity(Ljavacard/framework/APDU;)V 136 {
			.stack 3;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					getfield_b_this 2;		// boolean applet/TheApplet.PINsecurity
					ifeq L2;
				L1:	aload_2;
					sconst_0;
					bspush 49;
					bastore;
					goto L3;
				L2:	aload_2;
					sconst_0;
					bspush 48;
					bastore;
				L3:	aload_1;
					sconst_0;
					sconst_1;
					invokevirtual 30;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

		.method  desactivateActivatePINSecurity(Ljavacard/framework/APDU;)V 137 {
			.stack 2;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	getfield_b_this 2;		// boolean applet/TheApplet.PINsecurity
					ifeq L2;
				L1:	aload_0;
					sconst_0;
					putfield_b 2;		// boolean applet/TheApplet.PINsecurity
					goto L3;
				L2:	aload_0;
					sconst_1;
					putfield_b 2;		// boolean applet/TheApplet.PINsecurity
				L3:	return;
		}

		.method  enterReadPIN(Ljavacard/framework/APDU;)V 138 {
			.stack 5;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 31;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					getfield_a_this 0;		// reference applet/TheApplet.pinRead
					aload_2;
					sconst_5;
					aload_2;
					sconst_4;
					baload;
					invokevirtual 32;		// javacard/framework/OwnerPIN.check([BSB)Z
					ifne L2;
				L1:	sspush 25344;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L2:	return;
		}

		.method  enterWritePIN(Ljavacard/framework/APDU;)V 139 {
			.stack 5;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_1;
					invokevirtual 31;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					getfield_a_this 1;		// reference applet/TheApplet.pinWrite
					aload_2;
					sconst_5;
					aload_2;
					sconst_4;
					baload;
					invokevirtual 32;		// javacard/framework/OwnerPIN.check([BSB)Z
					ifne L2;
				L1:	sspush 25344;
					invokestatic 28;		// javacard/framework/ISOException.throwIt(S)V
				L2:	return;
		}

		.method  readNameFromCard(Ljavacard/framework/APDU;)V 140 {
			.stack 6;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					getstatic_a 33;		// reference applet/TheApplet.studentName
					sconst_1;
					aload_2;
					sconst_0;
					getstatic_a 33;		// reference applet/TheApplet.studentName
					sconst_0;
					baload;
					invokestatic 34;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					getstatic_a 33;		// reference applet/TheApplet.studentName
					sconst_0;
					baload;
					invokevirtual 30;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

		.method  writeNameToCard(Ljavacard/framework/APDU;)V 141 {
			.stack 6;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 13;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_1;
					invokevirtual 31;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					sconst_4;
					getstatic_a 33;		// reference applet/TheApplet.studentName
					sconst_0;
					aload_2;
					sconst_4;
					baload;
					sconst_1;
					sadd;
					s2b;
					invokestatic 34;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					return;
		}

	}

}
